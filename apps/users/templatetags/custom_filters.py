# apps/users/templatetags/custom_filters.py

from django import template  # Импорт библиотеки шаблонов Django для создания пользовательских тегов и фильтров

from apps.users.permissions import is_admin, is_employee  # Импорт функций для проверки прав пользователя

# Регистрация библиотеки шаблонов для пользовательских фильтров
register = template.Library()


@register.filter(name='is_admin')
def check_is_admin(user):
    """
    Определяет, является ли пользователь администратором.

    Эта функция проверяет, имеет ли указанный пользователь административные права, используя функцию `is_admin` из
    модуля прав доступа. Регистрируется как пользовательский фильтр для использования в Django-шаблонах.

    Аргументы:
        user: Объект пользователя, для которого необходимо проверить административные права.

    Возвращает:
        bool: True, если пользователь является администратором, иначе False.
    """
    return is_admin(user)


@register.filter(name='is_employee')
def check_is_employee(user):
    """
    Определяет, является ли пользователь сотрудником.

    Эта функция проверяет, имеет ли указанный пользователь права сотрудника, используя функцию `is_employee` из модуля
    прав доступа. Регистрируется как пользовательский фильтр для использования в Django-шаблонах.

    Аргументы:
        user: Объект пользователя, для которого необходимо проверить права сотрудника.

    Возвращает:
        bool: True, если пользователь является сотрудником, иначе False.
    """
    return is_employee(user)
